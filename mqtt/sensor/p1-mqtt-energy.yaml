# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃                                     MQTT Sensors Configuration                                 ┃
# ┃ ---------------------------------------------------------------------------------------------- ┃
# ┃ This file defines various sensors to monitor and collect data within Home Assistant.           ┃
# ┃ ---------------------------------------------------------------------------------------------- ┃
# ┃ File: p1-mqtt-energy.yaml                                                                      ┃
# ┃ Created: March 03, 2024                                                                        ┃
# ┃ By: S.Incze                                                                                    ┃
# ┃                                                                                                ┃
# ┃ Version: 1.1 01-04-2024 (Added Error Handling and modified GAS regex)                          ┃
# ┃                         (Changed Device Class for Voltage devices)                             ┃
# ┃----------------------------------------------------------------------------------------------- ┃
# ┃ Note: Please be cautious while editing this file to maintain the correct YAML syntax.          ┃
# ┃                                                                                                ┃
# ┃ The P1 meter is connected to a WEMOS D1 running ESPEASY 20240229 - MEGA                        ┃
# ┃ In EspEASY:                                                                                    ┃
# ┃ - A Communication - Serial Server retrieves the values from the P1 meter                       ┃
# ┃                                                                                                ┃
# ┃ Domoticz connects to this service so unfortunately HomeAssistant needs to be integrated in a   ┃
# ┃ different way. As I want to run both systems simultaniously now                                ┃
# ┃                                                                                                ┃
# ┃ Luckily if you configure the Communication - Serial Server with:                               ┃
# ┃ - Event processing:: Generic                                                                   ┃
# ┃ - And add the following rule:                                                                  ┃
# ┃                                                                                                ┃
# ┃ on !Serial* do // Include * to process string values                                           ┃
# ┃   PublishR,ESP_Easy/%sysname%/P1,%eventvalue%                                                  ┃
# ┃ endon                                                                                          ┃
# ┃                                                                                                ┃
# ┃ A message will end up in your MQTT Broker that we can interpret to devices with the code below ┃
# ┃----------------------------------------------------------------------------------------------- ┃
# ┃ In my configuration.yaml I have the following directive:                                       ┃
# ┃                                                                                                ┃
# ┃ mqtt:                                                                                          ┃ 
# ┃   sensor: !include_dir_merge_list mqtt/sensor                                                  ┃
# ┃                                                                                                ┃
# ┃ This means this file needs to be in /mqtt/sensor subdirectory                                  ┃
# ┃ ---------------------------------------------------------------------------------------------- ┃
# ┃ For more information, visit: https://www.home-assistant.io/integrations/sensor/                ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

- name: "MQTT-P1 Low Tariff Usage"
  state_topic: "ESP_Easy/Watermeter/P1"
  value_template: >
    {% if value %}
      {% set raw_value = value | regex_findall_index("1-0:1.8.1\(([\d.]+)\*kWh\)", 0) %}
      {% if raw_value is defined and raw_value | float > 0 %}
        {{ raw_value | float }}
      {% endif %}
    {% endif %}
  unique_id: mqtt_low_tariff_usage
  unit_of_measurement: "kWh"
  device_class: energy
  state_class:  total_increasing

- name: "MQTT-P1 High Tariff Usage"
  state_topic: "ESP_Easy/Watermeter/P1"
  value_template: >
    {% if value %}
      {% set raw_value = value | regex_findall_index("1-0:1.8.2\(([\d.]+)\*kWh\)", 0) %}
      {% if raw_value is defined and raw_value | float > 0 %}
        {{ raw_value | float }}
      {% endif %}
    {% endif %}
  unique_id: mqtt_high_tariff_usage
  unit_of_measurement: "kWh"
  device_class: energy
  state_class:  total_increasing

- name: "MQTT-P1 Low Tariff Return"
  state_topic: "ESP_Easy/Watermeter/P1"
  value_template: >
    {% if value %}
      {% set raw_value = value | regex_findall_index("1-0:2.8.1\(([\d.]+)\*kWh\)", 0) %}
      {% if raw_value is defined and raw_value | float > 0 %}
        {{ raw_value | float }}
      {% endif %}
    {% endif %}
  unique_id: mqtt_low_tariff_return
  unit_of_measurement: "kWh"
  device_class: energy
  state_class:  total_increasing

- name: "MQTT-P1 High Tariff Return"
  state_topic: "ESP_Easy/Watermeter/P1"
  value_template: >
    {% if value %}
      {% set raw_value = value | regex_findall_index("1-0:2.8.2\(([\d.]+)\*kWh\)", 0) %}
      {% if raw_value is defined and raw_value | float > 0 %}
        {{ raw_value | float }}
      {% endif %}
    {% endif %}
  unique_id: mqtt_high_tariff_return
  unit_of_measurement: "kWh"
  device_class: energy
  state_class:  total_increasing
# -------------------------------------------------------------------------------------------------------
- name: "MQTT-P1 Actual Consumption"
  state_topic: "ESP_Easy/Watermeter/P1"
  value_template: >
    {% if value %}
      {% set raw_value = value | regex_findall_index("1-0:1.7.0\(([\d.]+)\*kW\)", 0) | float %}
      {% if raw_value >= 0 %}
        {{ raw_value | float }}
      {% else %}
        0
      {% endif %}
    {% endif %}
  unique_id: mqtt_actual_consumption
  unit_of_measurement: "kW"
  device_class: power

- name: "MQTT-P1 Actual Return"
  state_topic: "ESP_Easy/Watermeter/P1"
  value_template: >
    {% if value %}
      {% set raw_value = value | regex_findall_index("1-0:2.7.0\(([\d.]+)\*kW\)", 0) | float %}
      {% if raw_value >= 0 %}
        {{ raw_value | float }}
      {% else %}
        0
      {% endif %}
    {% endif %}
  unique_id: mqtt_actual_return
  unit_of_measurement: "kW"
  device_class: power

# -------------------------------------------------------------------------------------------------------
# Voltage 
# -------------------------------------------------------------------------------------------------------
- name: "MQTT-P1 Voltage_L1"
  state_topic: "ESP_Easy/Watermeter/P1"
  value_template: >
    {% if value %}
      {% set raw_value = value | regex_findall_index("1-0:32.7.0\((.*?)\*V\)", 0) | float %}
      {% if raw_value >= 0 %}
        {{ raw_value }}
      {% else %}
        0
      {% endif %}
    {% endif %}
  unit_of_measurement: "V"
  device_class: voltage
  unique_id: mqtt_voltage_l1

- name: "MQTT-P1 Voltage_L2"
  state_topic: "ESP_Easy/Watermeter/P1"
  value_template: >
    {% if value %}
      {% set raw_value = value | regex_findall_index("1-0:52.7.0\((.*?)\*V\)", 0) | float %}
      {% if raw_value >= 0 %}
        {{ raw_value }}
      {% else %}
        0
      {% endif %}
    {% endif %}
  unit_of_measurement: "V"
  unique_id: mqtt_voltage_l2
  device_class: voltage

- name: "MQTT-P1 Voltage_L3"
  state_topic: "ESP_Easy/Watermeter/P1"
  value_template: >
    {% if value %}
      {% set raw_value = value | regex_findall_index("1-0:72.7.0\((.*?)\*V\)", 0) | float %}
      {% if raw_value >= 0 %}
        {{ raw_value }}
      {% else %}
        0
      {% endif %}
    {% endif %}
  unit_of_measurement: "V"
  device_class: voltage
  unique_id: mqtt_voltage_l2
# -------------------------------------------------------------------------------------------------------
# Amps
# -------------------------------------------------------------------------------------------------------
- name: "MQTT-P1 Current l1"
  state_topic: "ESP_Easy/Watermeter/P1"
  value_template: >
    {% if value %}
      {% set raw_value = value | regex_findall_index("1-0:31.7.0\(([\d.]+)\*A\)", 0) | float %}
      {% if raw_value >= 0 %}
        {{ raw_value }}
      {% else %}
        0
      {% endif %}
    {% endif %}
  unit_of_measurement: "A"     
  device_class: current
  unique_id: mqtt_current_l1      

- name: "MQTT-P1 Current l2"
  state_topic: "ESP_Easy/Watermeter/P1"
  value_template: >
    {% if value %}
      {% set raw_value = value | regex_findall_index("1-0:51.7.0\(([\d.]+)\*A\)", 0) | float %}
      {% if raw_value >= 0 %}
        {{ raw_value }}
      {% else %}
        0
      {% endif %}
    {% endif %}
  unit_of_measurement: "A"
  device_class: current
  unique_id: mqtt_current_l2

- name: "MQTT-P1 Current l3"
  state_topic: "ESP_Easy/Watermeter/P1"
  value_template: >
    {% if value %}
      {% set raw_value = value | regex_findall_index("1-0:71.7.0\(([\d.]+)\*A\)", 0) | float %}
      {% if raw_value >= 0 %}
       {{ raw_value }}
      {% else %}
       0
      {% endif %}
    {% endif %}
  unit_of_measurement: "A"
  device_class: current
  unique_id: mqtt_current_l3
# -------------------------------------------------------------------------------------------------------
# GAS 
# -------------------------------------------------------------------------------------------------------
- name: "MQTT-P1 Gas Consumption"
  state_topic: "ESP_Easy/Watermeter/P1"
  value_template: >
    {% if value %}
      {% set raw_value = value | regex_findall_index("0-1:24\.2\.1\([^)]+\)\(([\d.]+)\*m3\)", 0) %}
      {% if raw_value is defined and raw_value | float > 0 %}
        {{ raw_value | float }}
      {% endif %}
    {% endif %}
  unit_of_measurement: "m³"
  device_class: gas
  state_class: total_increasing
  icon: mdi:meter-gas
  unique_id: mqtt_gas

# -------------------------------------------------------------------------------------------------------
      
# 0-0:96.14.0 - Actual Tarif ("actual_tarif_group", ACTUAL_TARIF); (0001)
# 1-0:32.32.0 - ("short_power_outages); Fase 1 - (00000) 
# 1-0:52.32.0 - ("short_power_outages); Fase 2 - (00000)
# 1-0:72.32.0 - ("short_power_outages); Fase 3 - (00000)
# 0-0:96.7.9 - ("long_power_outages", LONG_POWER_OUTAGES); - (00010)  
# 1-0:32.36.0 - Number of voltage ("short_power_peaks", SHORT_POWER_PEAKS); L1 (00014)
# 1-0:52.36.0 - Number of voltage ("short_power_peaks", SHORT_POWER_PEAKS); L2 (00009) 
# 1-0:72.36.0 - Number of voltage ("short_power_peaks", SHORT_POWER_PEAKS); L3 (00012)
